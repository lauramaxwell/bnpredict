% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m_predict.R
\name{m_predict}
\alias{m_predict}
\title{Predicting Missing Values}
\usage{
m_predict(dat, network, r, missing_var)
}
\arguments{
\item{dat}{the dataframe}

\item{network}{object of class CPT or CPTgrain that specifies the structure of network}

\item{r}{row containing missing data}

\item{missing_var}{string indicating the variable/feature that you would like to test predictability}
}
\value{
a dataframe with 6 slots: m1, m1_prob, m2, m2_prob, m3, m3_prob
}
\description{
Predict the top 3 most probable values for missing categorical data using a trained bayesian network
}
\section{Slots}{

\describe{
\item{\code{m1:}}{most probable value for the missing feature}

\item{\code{m1_prob:}}{probability of m1}

\item{\code{m2:}}{second most probable value for the missing feature}

\item{\code{m2_prob:}}{probability of m2}

\item{\code{m3:}}{third most probable value for the missing feature}

\item{\code{m3_prob:}}{probability of m3}
}}
\examples{
data(dat, package = "bnpredict")
net <- bnlearn::model2network("[compensation|age:full_time][age][job|compensation:full_time][full_time][cluster|job:compensation:age:full_time]")
#bnlearn::graphviz.plot(net, shape="ellipse",
#                         Rgraphviz::layout="dot")
dat25 <- dat
dat25[sample(1:nrow(dat25),500),]$job <- NA
emp_net25 <- bnlearn::bn.fit(net, data = na.omit(dat25))
emp_bn25 <-  gRbase::compile(bnlearn::as.grain(emp_net25))

##predicting the first row for missing job titles
m_predict(dat= dat25, network= emp_bn25, r= as.numeric(rownames(dat25[1,])),missing_var = "job")

##predicting all rows (this uses the package plyr)
m_pred_out <- plyr::adply(dat[is.na(dat25$job) == T,], 1, function(x) m_predict(dat= dat25, network= emp_bn25, r= max(as.numeric(rownames(x))), missing_var = "job"), .progress = "text")
}

